---
layout: post
title: "\"Boustrophedonically\""
date: 2020-12-18 22:51:00 -0600
categories:
  - Data Viz
description: "Earlier this week, I tweeted about a data visualization that I made. It's a new kind of plot, so interpretation isn't super straightforward, but it's funny, silly, surprising, intersting, and memorable, which is why I think it's a good one."
---

Earlier this week, I tweeted about a data visualization that I made. I said: 

> Okay, I'm trying something out. I have this histogram with one very tall bar and many shorter ones. So to save space, I made that tall bar follow the edge of the plotting area boustrophedonically---my favorite word!---but I'm not sure if I like it. Thoughts?

I then showed a plot that looked something like this:

![](boustrophedon.png)

The data, which comes from a paper I'm working on, is difficult to visualize because the vast majority of the responses is clustered around zero while the rest is spread out a bit. I continued:

> I'm trying to show that the one bar is huge compared to the others, but at the same time I want to show the detail in the smaller bars. Data transformations haven't seemed to work. No matter what I try I can't seem to find an effective visualization.

I got lots and lots of comments from people and people's thoughts were all over the board. Some said it's great; others said they didn't like it. And there were a handful that had very strongly mixed feelings of loving it and hating it. It's a new kind of plot, so interpretation isn't super straightforward, but it's funny, silly, surprising, interesting, and memorable, which is why *I* think it's a good one.

## Boustrophewhat??

The way the tallest plot sort of goes back along the top can be perfectly described in one fantastic word: *boustrophedonically*. It's my favorite word ever. The word has its roots in describing how an ox plows a field and can also describe how Ancient Greek was written. Nowadays, older Millennials just think of playing Snake on a brick phone. You might think it's so obscure, so long, and so specific that no one could ever find a use for it, but I did manage to find a way to use it *twice* in a previous blog [post about Chutes and Ladders](/blog/simulating_chutes_and_ladders). 

I first saw plots like these when reading one of Edward Tufte's books. I don't have them on me, but I believe it was in [*The Visual Display of Quantitative Information*](https://www.edwardtufte.com/tufte/books_vdqi). [Guthrie McAfee Armstrong](https://twitter.com/gmarmstrong/status/1339706465926455296?s=20) points out that that W. E. B. Du Bois used this technique in his visualizations from well over 100 years ago. I believe Tufte showed some of these plots. You can see some of those original visuals in [this Medium article](https://t.co/A2pjBlippi?amp=1) that [Matthew Kay](https://twitter.com/mjskay/status/1339574623512440833?s=20) pointed me to.

I got lots of great suggestions from people on Twitter, so I thought I'd try out their suggestions so you can judge for yourself which one is the best. I'll try to credit everyone who made the suggestions: this was truly a group effort here!

## The full height

[Jack Grieve](https://twitter.com/JWGrieve/status/1339613750094155776?s=20) and [jordan t. thevenow-harrison](https://twitter.com/jtth/status/1339711677311426561?s=20) suggested I just plot all the data on a mega *y*-axis. Well, because the first bar is so stinking huge, I'd have to make the plot *suuuuuper* tall. 

![](super_tall.png)

This way of visualizing data is not always bad: on March 27, 2020, the New York Times made [an epic plot](https://www.nytimes.com/issue/todayspaper/2020/03/27/todays-new-york-times) showing unemployment numbers for that week. But for my data, I don't know if it's quite right. Though, see [this relevant xkcd](https://xkcd.com/1162/) that [Rodolpho Piskorski](https://twitter.com/BleddwganMiaren/status/1339613093933047808?s=20) delightfully reminded me of!

## Log-transformed

When you've got wildly different heights like this, the first step is to do a transformation of some sort. [Christian DiCanio](https://twitter.com/ctdicanio/status/1339568623397040130?s=20) recommended a log transformation like this:

![](log_transformed.png)

While it does show all the bars at once, I just can't fully appreciate the magnitude of the biggest one.

## Split the *y*-axis

A common technique for something like this would be to split the *y*axis so that there's a discontinuity and several people recommended this route. 

As Hadley Wickham mentions [here](https://groups.google.com/g/ggplot2/c/jSrL_FnS8kc/m/MvzM_2_jiSIJ), there's no native way in ggplot2 to do a discontinuous *y*-axis, so I had to sort of fudge it with [`patchwork`](https://patchwork.data-imaginist.com/index.html). Here's what that plot might look like:

![](chopped_y.png)

This method is generally frowned upon though since the amount of real estate devoted to the big plot is disproportionate to the amount of data it actually represents so it hides the magnitude of that big bar.

## Pointing arrow

One workaround is to zoom in to the smaller bars, and just give an indicator of how tall the big one is. I just text with an arrow pointing up.

![](pointing_label.png)

This was one that I've been considering for a while now, but again, the problem is the real estate issue and it's difficult to fully appreciate the actual height of that plot.

## Chunky first bar

[TJ Mahr's](https://twitter.com/tjmahr/status/1339571715467337728?s=20) funny recommendation was to, instead of retaining the bar's original length, make it wider. 

![](chunky.png)

Like the boustrophedon, it breaks the *xy*-coordinate system a histogram relies on, but the main strike against it is that humans aren't good at judging areas as well as we think we are, so it only sort of does a good job at showing the size.


## Plot within a plot

Honestly, I think the best workaround would be to take [Joseph Casillas](https://twitter.com/jvcasill/status/1339560493741174788?s=20), [Márton Sóskuthy](https://twitter.com/msoskuthy/status/1340083524670394369?s=20), [Timo Roetger's](https://twitter.com/TimoRoettger/status/1339593352451244041?s=20), and [May Helena Plumb's](https://twitter.com/mayhplumb/status/1339606411920195587?s=20) recommendations and split the plot into two, one showing the big bar relative to the rest and the other showing the detail of the smaller ones. One way to do this is with a plot within a plot, which I did with the `patchwork` package again. 

![](plot_within_plot.png)

Again, probably the best recommendation if I can get that smaller plot to look decent.

## Zoomed in plot

An alternative to doing the plot-within-a-plot is to make it clearer that there's a zoom happening, so the relevant portion of the full-size plot is highlighted and linked to the zoomed in one. This is accomplished with [`ggforce::facet_zoom`](https://ggforce.data-imaginist.com/reference/facet_zoom.html), as recommended by [Justin Lo](https://twitter.com/justinjhlo/status/1339473347537743873?s=20) and [Sandra Jansen](https://twitter.com/sj2915/status/1339473888485498880?s=20):

![](facet_zoom.png)

In this case, I'm not a huge fan of the greyed portion in the upper plot, because it sort of gets in the ways of the bars in the *y*-axis.

## Conclusion

So, there are lots of ways to do this. Honestly, I freaking love the boustrophedon one and I'm seriously considering including it in the paper. I ran a poll and the slight majority agreed with me:

<blockquote class="twitter-tweet" data-conversation="none"><p lang="en" dir="ltr">Overall impressions?</p>&mdash; Joey Stanley (@joey_stan) <a href="https://twitter.com/joey_stan/status/1339599682922680324?ref_src=twsrc%5Etfw">December 17, 2020</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>


I think because it's so controversial and because people have such mixed feelings, it made for a really good discussion about the purpose behind the plot, faithfulness to the data, and overall aesthetics. Who knows I'd have so much fun rallying people together over some silly visual?